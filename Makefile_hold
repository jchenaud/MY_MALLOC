ifeq ($(HOSTTYPE),)
	HOSTTYPE := $(shell uname -m)_$(shell uname -s)
endif

NAME = libft_malloc_$(HOSTTYPE).so

FILE = 	malloc.c \
		free.c \
		realloc.c \
		show_alloc.c \
		thread.c \
		erno.c \

SRC_PATH = src
OBJ_PATH = obj
INCLUDES = include/malloc.h

BRI  = $(FILE:.c=.o)
OBJ = $(addprefix $(OBJ_PATH)/,$(BRI))
SRC = $(addprefix $(SRC_PATH)/,$(FILE))
FLAG = -Wall -Wextra



all:$(NAME)
$(NAME): $(OBJ)

	cd libft && make re
	gcc -lpthread -shared -o $(NAME) $(FLAG) -I include  -I libft libft/libft.a  $(OBJ)
	ln -fs $(NAME) libft_malloc.so
# $(NAME): $(OBJ)
# 	$(CC) $(MALLOCFLAG) $(LDFLAGS) $(LDLIBS) $(src) -o $@
# 	ln -fs $(NAME) libft_malloc.so

host:
	echo $(HOSTTYPE)

test_true:
	gcc -o test_true $(SRC) test_true.c  -I include  -I libft libft/libft.a

rm_true:
	@rm test_true

re_true:rm_true test_true

$(OBJ_PATH)%.o: $(SRC_PATH)%.c
    @mkdir $(OBJ_PATH) 2> /dev/null
    $(CC) $(CFLAGS) $(CPPFLAGS) -o $@ -c $<
# $(OBJ): $(SRC)
# 	gcc  -o $@ -I include  -I libft -c $<
#  $(OBJ): $(SRC)
# 	mkdir $(OBJ_PATH) 2> /dev/null || true
# 	$(CC) $(CFLAGS) $(CPPFLAGS) $(LDLIBS) $(INCLUDES) -c $< -o $@ 

clean:
	rm -fv $(OBJ)
	@rmdir $(OBJ_PATH) 2> /dev/null || true


fclean: clean
	rm -fv $(NAME) libft_malloc.so

re: fclean all

.PHONY: all, clean, fclean, re





# CC = cc

# SRC_PATH = srcs

# SRC_NAME =  malloc.c \
#  		free.c \
# 		realloc.c \
# 		show_alloc.c \
# 		thread.c \
# 		erno.c \

# CPPFLAGS = -Iinclude

# # LDFLAGS = -Llibft
# LDLIBS = -libft/libft.h
# MALLOCFLAG = -lpthread -shared

# NAME = libft_malloc_$(HOSTTYPE).so
# FLAGS = -Werror -Wall -Wextra

# OBJ_NAME = $(SRC_NAME:.c=.o)
# OBJ_PATH = obj
# SRC = $(addprefix $(SRC_PATH)/,$(SRC_NAME))
# OBJ = $(addprefix $(OBJ_PATH)/,$(OBJ_NAME))



# all: $(NAME)

# $(OBJ): $(SRC)
# 	@mkdir $(OBJ_PATH) 2> /dev/null || true
# 	$(CC) $(CFLAGS) $(CPPFLAGS) -o $@ -c $<



# $(OBJ_PATH)%.o: $(SRC_PATH)%.c
#     @mkdir $(OBJ_PATH) 2> /dev/null
#     $(CC) $(CFLAGS) $(CPPFLAGS) -o $@ -c $<

# $(NAME): $(OBJ)
# 	$(CC) $(MALLOCFLAG) $(LDFLAGS) $(LDLIBS) $(src) -o $@
# 	ln -fs $(NAME) libft_malloc.so

# $(OBJ): $(SRC)
# 	mkdir $(OBJ_PATH) 2> /dev/null || true
# 	$(CC) $(CFLAGS) $(CPPFLAGS) $(LDLIBS) -o $@ -c $<
# # $(OBJ): $(SRC)
# # 	if [ ! -d $(OBJ_PATH) ]; then mkdir -p obj; fi
# # 	if [ ! -d $(dir $@) ]; then mkdir -p $(dir $@); fi
# # 	$(CC) $(CFLAGS) $(CPPFLAGS)  -c $< -o $@

# clean:
# 	rm -fv $(OBJ)
# 	@rmdir $(OBJ_PATH) 2> /dev/null || true


# fclean: clean
# 	rm -fv $(NAME) libft_malloc.so

# re: fclean all

# .PHONY: all, clean, fclean, re

